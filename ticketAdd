import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {}

  @override
  Widget build(BuildContext context) {
    var size = MediaQuery.of(context).size;
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: <Widget>[
          Column(
            children: <Widget>[

              Container(
                decoration: BoxDecoration(
                  color: Colors.black
                ),
              ),

            ],
          ),
          Column(

            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              Container(
                padding: EdgeInsets.symmetric(vertical: 40.0, horizontal: 15.0),
                child: Row(
                  children: <Widget>[
                    Icon(
                      Icons.chevron_left, size: 40.0,
                    ),
                    Text(
                      'TICKETS', style: TextStyle(
                      fontSize: 30.0,
                      fontWeight: FontWeight.bold
                    ),
                    ),
                    Spacer(),
                    Icon(
                      Icons.add, size: 30.0,
                    ),
                  ],
                ),
              ),
              Padding(
                padding: const EdgeInsets.symmetric(vertical: 10.0),
                child: Card(
                  shadowColor: Colors.black,
                  child: Container(
                    width: 370.0,
                    height: 30.0,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.all(
                        Radius.circular(10.0)
                      )
                    ),
                    child: Row(
                       children: <Widget>[
                         Padding(
                           padding: const EdgeInsets.symmetric(horizontal: 10.0),
                           child: Icon(
                             Icons.search, size: 20.0,
                           ),
                         ),
                       ],
                    ),
                  ),
                ),
              ),
              Card(
                elevation: 20,
                shadowColor: Colors.grey[100],
                child: Container(
                  padding: EdgeInsets.all(16),
                  width: size.width * 0.9,
                  child: Row(
                    children: <Widget>[
                      destination(),
                      departure(),
                      from()
                    ],
                  ),
                ),
              ),
              SizedBox(
                height: 10.0,
              ),
              Card(
                elevation: 20,
                shadowColor: Colors.grey[100],
                child: Container(
                  padding: EdgeInsets.all(16),
                  width: size.width * 0.9,
                  child: Row(
                    children: <Widget>[
                      destinationsecond(),
                      departuresecond(),
                      secondfrom()
                    ],
                  ),
                ),
              ),
              SizedBox(
                height: 10.0,
              ),
              Card(
                elevation: 20,
                shadowColor: Colors.grey[100],
                child: Container(
                  padding: EdgeInsets.all(16),
                  width: size.width * 0.9,
                  child: Row(
                    children: <Widget>[
                      destinationthird(),
                      departurethird(),
                      thirdfrom()
                    ],
                  ),
                ),
              ),
              SizedBox(
                height: 20.0,
              ),
            ],
          ),
        ],
      ),
    );
  }

  from() => Expanded(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.end,
            children: <Widget>[
              Text(
                '15:25',
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text('Oslo'),
              Text(
                'OSL',
                style: TextStyle(color: Colors.grey) ,
              ),
            ],
          ),
        ),
      );

  departure() => Expanded(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              Text(
                '27 Sept',
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              SizedBox(
                height: 8.0,
              ),
              Icon(
                Icons.airplanemode_active,
                color: Colors.blueAccent,
              ),
            ],
          ),
        ),
      );

  destination() => Expanded(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              Text(
                '11:25',
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              Text('Moscow'),
              Text(
                'DME',
                style: TextStyle(color: Colors.grey),
              )
            ],
          ),
        ),
      );

  secondfrom() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.end,
        children: <Widget>[
          Text(
            '16:05',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          Text('Oslo'),
          Text(
            'OSL',
            style: TextStyle(color: Colors.grey),
          )
        ],
      ),
    ),
  );
  departuresecond() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: <Widget>[
          Text(
            '27 Sept',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          SizedBox(
            height: 8.0,
          ),
          Icon(
            Icons.train,
            color: Colors.blueAccent,
          ),
        ],
      ),
    ),
  );
  destinationsecond() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Text(
            '16:47',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          Text('Oslo'),
          Text(
            'Oslo s',
            style: TextStyle(color: Colors.grey),
          )
        ],
      ),
    ),
  );
  thirdfrom() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.end,
        children: <Widget>[
          Text(
            '07:25',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          Text('Oslo'),
          Text(
            'OSL',
            style: TextStyle(color: Colors.grey),
          )
        ],
      ),
    ),
  );
  departurethird() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: <Widget>[
          Text(
            '1 OCT',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          SizedBox(
            height: 8.0,
          ),
          Icon(
            Icons.airplanemode_active,
            color: Colors.blueAccent,
          ),
        ],
      ),
    ),
  );
  destinationthird() => Expanded(
    child: Padding(
      padding: const EdgeInsets.all(8.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Text(
            '08:15',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          Text('Bergen'),
          Text(
            'BGO',
            style: TextStyle(color: Colors.grey),
          )
        ],
      ),
    ),
  );
}
